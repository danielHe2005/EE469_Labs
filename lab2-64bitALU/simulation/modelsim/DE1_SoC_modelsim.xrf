vendor_name = ModelSim
source_file = 1, C:/469labs/lab2/alustim.sv
source_file = 1, C:/469labs/lab2/mux_64to1.sv
source_file = 1, C:/469labs/lab2/mux_32to1.sv
source_file = 1, C:/469labs/lab2/mux_16to1.sv
source_file = 1, C:/469labs/lab2/mux_8to1.sv
source_file = 1, C:/469labs/lab2/mux_4to1.sv
source_file = 1, C:/469labs/lab2/mux_2to1.sv
source_file = 1, C:/469labs/lab2/demux_1to8.sv
source_file = 1, C:/469labs/lab2/demux_1to4.sv
source_file = 1, C:/469labs/lab2/decoder5_32.sv
source_file = 1, C:/469labs/lab2/D_FF.sv
source_file = 1, C:/469labs/lab2/clock_divider.sv
source_file = 1, C:/469labs/lab2/alu.sv
source_file = 1, C:/469labs/lab2/adderSubtractor.sv
source_file = 1, C:/469labs/lab2/DE1_SoC.sdc
source_file = 1, C:/469labs/lab2/db/DE1_SoC.cbx.xml
design_name = alu
instance = comp, \result[0]~output , result[0]~output, alu, 1
instance = comp, \result[1]~output , result[1]~output, alu, 1
instance = comp, \result[2]~output , result[2]~output, alu, 1
instance = comp, \result[3]~output , result[3]~output, alu, 1
instance = comp, \result[4]~output , result[4]~output, alu, 1
instance = comp, \result[5]~output , result[5]~output, alu, 1
instance = comp, \result[6]~output , result[6]~output, alu, 1
instance = comp, \result[7]~output , result[7]~output, alu, 1
instance = comp, \result[8]~output , result[8]~output, alu, 1
instance = comp, \result[9]~output , result[9]~output, alu, 1
instance = comp, \result[10]~output , result[10]~output, alu, 1
instance = comp, \result[11]~output , result[11]~output, alu, 1
instance = comp, \result[12]~output , result[12]~output, alu, 1
instance = comp, \result[13]~output , result[13]~output, alu, 1
instance = comp, \result[14]~output , result[14]~output, alu, 1
instance = comp, \result[15]~output , result[15]~output, alu, 1
instance = comp, \result[16]~output , result[16]~output, alu, 1
instance = comp, \result[17]~output , result[17]~output, alu, 1
instance = comp, \result[18]~output , result[18]~output, alu, 1
instance = comp, \result[19]~output , result[19]~output, alu, 1
instance = comp, \result[20]~output , result[20]~output, alu, 1
instance = comp, \result[21]~output , result[21]~output, alu, 1
instance = comp, \result[22]~output , result[22]~output, alu, 1
instance = comp, \result[23]~output , result[23]~output, alu, 1
instance = comp, \result[24]~output , result[24]~output, alu, 1
instance = comp, \result[25]~output , result[25]~output, alu, 1
instance = comp, \result[26]~output , result[26]~output, alu, 1
instance = comp, \result[27]~output , result[27]~output, alu, 1
instance = comp, \result[28]~output , result[28]~output, alu, 1
instance = comp, \result[29]~output , result[29]~output, alu, 1
instance = comp, \result[30]~output , result[30]~output, alu, 1
instance = comp, \result[31]~output , result[31]~output, alu, 1
instance = comp, \result[32]~output , result[32]~output, alu, 1
instance = comp, \result[33]~output , result[33]~output, alu, 1
instance = comp, \result[34]~output , result[34]~output, alu, 1
instance = comp, \result[35]~output , result[35]~output, alu, 1
instance = comp, \result[36]~output , result[36]~output, alu, 1
instance = comp, \result[37]~output , result[37]~output, alu, 1
instance = comp, \result[38]~output , result[38]~output, alu, 1
instance = comp, \result[39]~output , result[39]~output, alu, 1
instance = comp, \result[40]~output , result[40]~output, alu, 1
instance = comp, \result[41]~output , result[41]~output, alu, 1
instance = comp, \result[42]~output , result[42]~output, alu, 1
instance = comp, \result[43]~output , result[43]~output, alu, 1
instance = comp, \result[44]~output , result[44]~output, alu, 1
instance = comp, \result[45]~output , result[45]~output, alu, 1
instance = comp, \result[46]~output , result[46]~output, alu, 1
instance = comp, \result[47]~output , result[47]~output, alu, 1
instance = comp, \result[48]~output , result[48]~output, alu, 1
instance = comp, \result[49]~output , result[49]~output, alu, 1
instance = comp, \result[50]~output , result[50]~output, alu, 1
instance = comp, \result[51]~output , result[51]~output, alu, 1
instance = comp, \result[52]~output , result[52]~output, alu, 1
instance = comp, \result[53]~output , result[53]~output, alu, 1
instance = comp, \result[54]~output , result[54]~output, alu, 1
instance = comp, \result[55]~output , result[55]~output, alu, 1
instance = comp, \result[56]~output , result[56]~output, alu, 1
instance = comp, \result[57]~output , result[57]~output, alu, 1
instance = comp, \result[58]~output , result[58]~output, alu, 1
instance = comp, \result[59]~output , result[59]~output, alu, 1
instance = comp, \result[60]~output , result[60]~output, alu, 1
instance = comp, \result[61]~output , result[61]~output, alu, 1
instance = comp, \result[62]~output , result[62]~output, alu, 1
instance = comp, \result[63]~output , result[63]~output, alu, 1
instance = comp, \negative~output , negative~output, alu, 1
instance = comp, \zero~output , zero~output, alu, 1
instance = comp, \overflow~output , overflow~output, alu, 1
instance = comp, \carry_out~output , carry_out~output, alu, 1
instance = comp, \B[0]~input , B[0]~input, alu, 1
instance = comp, \A[0]~input , A[0]~input, alu, 1
instance = comp, \cntrl[0]~input , cntrl[0]~input, alu, 1
instance = comp, \cntrl[2]~input , cntrl[2]~input, alu, 1
instance = comp, \cntrl[1]~input , cntrl[1]~input, alu, 1
instance = comp, \mux64Bit[0].outControl|muxL1P1|or1~0 , mux64Bit[0].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \firstAdd|or1~0 , firstAdd|or1~0, alu, 1
instance = comp, \B[1]~input , B[1]~input, alu, 1
instance = comp, \A[1]~input , A[1]~input, alu, 1
instance = comp, \mux64Bit[1].outControl|muxL1P1|or1~0 , mux64Bit[1].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[2]~input , B[2]~input, alu, 1
instance = comp, \A[2]~input , A[2]~input, alu, 1
instance = comp, \adderSub[1].addSub|or1~0 , adderSub[1].addSub|or1~0, alu, 1
instance = comp, \mux64Bit[2].outControl|muxL1P1|or1~0 , mux64Bit[2].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[3]~input , B[3]~input, alu, 1
instance = comp, \adderSub[2].addSub|or1~0 , adderSub[2].addSub|or1~0, alu, 1
instance = comp, \A[3]~input , A[3]~input, alu, 1
instance = comp, \mux64Bit[3].outControl|muxL1P1|or1~0 , mux64Bit[3].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[4]~input , B[4]~input, alu, 1
instance = comp, \adderSub[3].addSub|or1~0 , adderSub[3].addSub|or1~0, alu, 1
instance = comp, \A[4]~input , A[4]~input, alu, 1
instance = comp, \mux64Bit[4].outControl|muxL1P1|or1~0 , mux64Bit[4].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[5]~input , A[5]~input, alu, 1
instance = comp, \B[5]~input , B[5]~input, alu, 1
instance = comp, \mux64Bit[4].bitAnd~0 , mux64Bit[4].bitAnd~0, alu, 1
instance = comp, \adderSub[4].addSub|or1~0 , adderSub[4].addSub|or1~0, alu, 1
instance = comp, \adderSub[4].addSub|or1~1 , adderSub[4].addSub|or1~1, alu, 1
instance = comp, \adderSub[4].addSub|or1~2 , adderSub[4].addSub|or1~2, alu, 1
instance = comp, \mux64Bit[5].outControl|muxL1P1|or1~0 , mux64Bit[5].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[6]~input , A[6]~input, alu, 1
instance = comp, \adderSub[5].addSub|or1~0 , adderSub[5].addSub|or1~0, alu, 1
instance = comp, \B[6]~input , B[6]~input, alu, 1
instance = comp, \mux64Bit[6].outControl|muxL1P1|or1~0 , mux64Bit[6].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[7]~input , B[7]~input, alu, 1
instance = comp, \A[7]~input , A[7]~input, alu, 1
instance = comp, \adderSub[6].addSub|or1~0 , adderSub[6].addSub|or1~0, alu, 1
instance = comp, \mux64Bit[7].outControl|muxL1P1|or1~0 , mux64Bit[7].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[7].addSub|or1~0 , adderSub[7].addSub|or1~0, alu, 1
instance = comp, \A[8]~input , A[8]~input, alu, 1
instance = comp, \B[8]~input , B[8]~input, alu, 1
instance = comp, \mux64Bit[8].outControl|muxL1P1|or1~0 , mux64Bit[8].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[9]~input , A[9]~input, alu, 1
instance = comp, \B[9]~input , B[9]~input, alu, 1
instance = comp, \adderSub[8].addSub|or1~0 , adderSub[8].addSub|or1~0, alu, 1
instance = comp, \mux64Bit[9].outControl|muxL1P1|or1~0 , mux64Bit[9].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[10]~input , A[10]~input, alu, 1
instance = comp, \mux64Bit[9].bitAnd~0 , mux64Bit[9].bitAnd~0, alu, 1
instance = comp, \adderSub[9].addSub|or1~0 , adderSub[9].addSub|or1~0, alu, 1
instance = comp, \adderSub[9].addSub|or1~1 , adderSub[9].addSub|or1~1, alu, 1
instance = comp, \adderSub[9].addSub|or1~2 , adderSub[9].addSub|or1~2, alu, 1
instance = comp, \B[10]~input , B[10]~input, alu, 1
instance = comp, \mux64Bit[10].outControl|muxL1P1|or1~0 , mux64Bit[10].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[10].addSub|or1~0 , adderSub[10].addSub|or1~0, alu, 1
instance = comp, \B[11]~input , B[11]~input, alu, 1
instance = comp, \A[11]~input , A[11]~input, alu, 1
instance = comp, \mux64Bit[11].outControl|muxL1P1|or1~0 , mux64Bit[11].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[11].addSub|or1~0 , adderSub[11].addSub|or1~0, alu, 1
instance = comp, \A[12]~input , A[12]~input, alu, 1
instance = comp, \B[12]~input , B[12]~input, alu, 1
instance = comp, \mux64Bit[12].outControl|muxL1P1|or1~0 , mux64Bit[12].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[12].addSub|or1~0 , adderSub[12].addSub|or1~0, alu, 1
instance = comp, \A[13]~input , A[13]~input, alu, 1
instance = comp, \B[13]~input , B[13]~input, alu, 1
instance = comp, \mux64Bit[13].outControl|muxL1P1|or1~0 , mux64Bit[13].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[13].addSub|or1~0 , adderSub[13].addSub|or1~0, alu, 1
instance = comp, \B[14]~input , B[14]~input, alu, 1
instance = comp, \A[14]~input , A[14]~input, alu, 1
instance = comp, \mux64Bit[14].outControl|muxL1P1|or1~0 , mux64Bit[14].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[15]~input , B[15]~input, alu, 1
instance = comp, \A[15]~input , A[15]~input, alu, 1
instance = comp, \mux64Bit[14].bitAnd~0 , mux64Bit[14].bitAnd~0, alu, 1
instance = comp, \adderSub[14].addSub|or1~0 , adderSub[14].addSub|or1~0, alu, 1
instance = comp, \adderSub[14].addSub|or1~1 , adderSub[14].addSub|or1~1, alu, 1
instance = comp, \adderSub[14].addSub|or1~2 , adderSub[14].addSub|or1~2, alu, 1
instance = comp, \mux64Bit[15].outControl|muxL1P1|or1~0 , mux64Bit[15].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[15].addSub|or1~0 , adderSub[15].addSub|or1~0, alu, 1
instance = comp, \B[16]~input , B[16]~input, alu, 1
instance = comp, \A[16]~input , A[16]~input, alu, 1
instance = comp, \mux64Bit[16].outControl|muxL1P1|or1~0 , mux64Bit[16].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[16].addSub|or1~0 , adderSub[16].addSub|or1~0, alu, 1
instance = comp, \A[17]~input , A[17]~input, alu, 1
instance = comp, \B[17]~input , B[17]~input, alu, 1
instance = comp, \mux64Bit[17].outControl|muxL1P1|or1~0 , mux64Bit[17].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[17].addSub|or1~0 , adderSub[17].addSub|or1~0, alu, 1
instance = comp, \A[18]~input , A[18]~input, alu, 1
instance = comp, \B[18]~input , B[18]~input, alu, 1
instance = comp, \mux64Bit[18].outControl|muxL1P1|or1~0 , mux64Bit[18].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[18].addSub|or1~0 , adderSub[18].addSub|or1~0, alu, 1
instance = comp, \A[19]~input , A[19]~input, alu, 1
instance = comp, \B[19]~input , B[19]~input, alu, 1
instance = comp, \mux64Bit[19].outControl|muxL1P1|or1~0 , mux64Bit[19].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[20]~input , A[20]~input, alu, 1
instance = comp, \B[20]~input , B[20]~input, alu, 1
instance = comp, \adderSub[19].addSub|or1~0 , adderSub[19].addSub|or1~0, alu, 1
instance = comp, \adderSub[19].addSub|or1~1 , adderSub[19].addSub|or1~1, alu, 1
instance = comp, \mux64Bit[19].bitAnd~0 , mux64Bit[19].bitAnd~0, alu, 1
instance = comp, \adderSub[19].addSub|or1~2 , adderSub[19].addSub|or1~2, alu, 1
instance = comp, \mux64Bit[20].outControl|muxL1P1|or1~0 , mux64Bit[20].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[21]~input , A[21]~input, alu, 1
instance = comp, \adderSub[20].addSub|or1~0 , adderSub[20].addSub|or1~0, alu, 1
instance = comp, \B[21]~input , B[21]~input, alu, 1
instance = comp, \mux64Bit[21].outControl|muxL1P1|or1~0 , mux64Bit[21].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[22]~input , B[22]~input, alu, 1
instance = comp, \adderSub[21].addSub|or1~0 , adderSub[21].addSub|or1~0, alu, 1
instance = comp, \A[22]~input , A[22]~input, alu, 1
instance = comp, \mux64Bit[22].outControl|muxL1P1|or1~0 , mux64Bit[22].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[23]~input , B[23]~input, alu, 1
instance = comp, \adderSub[22].addSub|or1~0 , adderSub[22].addSub|or1~0, alu, 1
instance = comp, \A[23]~input , A[23]~input, alu, 1
instance = comp, \mux64Bit[23].outControl|muxL1P1|or1~0 , mux64Bit[23].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[24]~input , B[24]~input, alu, 1
instance = comp, \adderSub[23].addSub|or1~0 , adderSub[23].addSub|or1~0, alu, 1
instance = comp, \A[24]~input , A[24]~input, alu, 1
instance = comp, \mux64Bit[24].outControl|muxL1P1|or1~0 , mux64Bit[24].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[25]~input , B[25]~input, alu, 1
instance = comp, \A[25]~input , A[25]~input, alu, 1
instance = comp, \adderSub[24].addSub|or1~0 , adderSub[24].addSub|or1~0, alu, 1
instance = comp, \adderSub[24].addSub|or1~1 , adderSub[24].addSub|or1~1, alu, 1
instance = comp, \mux64Bit[24].bitAnd~0 , mux64Bit[24].bitAnd~0, alu, 1
instance = comp, \adderSub[24].addSub|or1~2 , adderSub[24].addSub|or1~2, alu, 1
instance = comp, \mux64Bit[25].outControl|muxL1P1|or1~0 , mux64Bit[25].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[26]~input , B[26]~input, alu, 1
instance = comp, \A[26]~input , A[26]~input, alu, 1
instance = comp, \adderSub[25].addSub|or1~0 , adderSub[25].addSub|or1~0, alu, 1
instance = comp, \mux64Bit[26].outControl|muxL1P1|or1~0 , mux64Bit[26].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[26].addSub|or1~0 , adderSub[26].addSub|or1~0, alu, 1
instance = comp, \B[27]~input , B[27]~input, alu, 1
instance = comp, \A[27]~input , A[27]~input, alu, 1
instance = comp, \mux64Bit[27].outControl|muxL1P1|or1~0 , mux64Bit[27].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[28]~input , A[28]~input, alu, 1
instance = comp, \adderSub[27].addSub|or1~0 , adderSub[27].addSub|or1~0, alu, 1
instance = comp, \B[28]~input , B[28]~input, alu, 1
instance = comp, \mux64Bit[28].outControl|muxL1P1|or1~0 , mux64Bit[28].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[29]~input , B[29]~input, alu, 1
instance = comp, \adderSub[28].addSub|or1~0 , adderSub[28].addSub|or1~0, alu, 1
instance = comp, \A[29]~input , A[29]~input, alu, 1
instance = comp, \mux64Bit[29].outControl|muxL1P1|or1~0 , mux64Bit[29].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[29].addSub|or1~0 , adderSub[29].addSub|or1~0, alu, 1
instance = comp, \adderSub[29].addSub|or1~1 , adderSub[29].addSub|or1~1, alu, 1
instance = comp, \mux64Bit[29].bitAnd~0 , mux64Bit[29].bitAnd~0, alu, 1
instance = comp, \adderSub[29].addSub|or1~2 , adderSub[29].addSub|or1~2, alu, 1
instance = comp, \B[30]~input , B[30]~input, alu, 1
instance = comp, \A[30]~input , A[30]~input, alu, 1
instance = comp, \mux64Bit[30].outControl|muxL1P1|or1~0 , mux64Bit[30].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[31]~input , A[31]~input, alu, 1
instance = comp, \adderSub[30].addSub|or1~0 , adderSub[30].addSub|or1~0, alu, 1
instance = comp, \B[31]~input , B[31]~input, alu, 1
instance = comp, \mux64Bit[31].outControl|muxL1P1|or1~0 , mux64Bit[31].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[32]~input , A[32]~input, alu, 1
instance = comp, \B[32]~input , B[32]~input, alu, 1
instance = comp, \adderSub[31].addSub|or1~0 , adderSub[31].addSub|or1~0, alu, 1
instance = comp, \mux64Bit[32].outControl|muxL1P1|or1~0 , mux64Bit[32].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[33]~input , B[33]~input, alu, 1
instance = comp, \adderSub[32].addSub|or1~0 , adderSub[32].addSub|or1~0, alu, 1
instance = comp, \A[33]~input , A[33]~input, alu, 1
instance = comp, \mux64Bit[33].outControl|muxL1P1|or1~0 , mux64Bit[33].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[34]~input , A[34]~input, alu, 1
instance = comp, \B[34]~input , B[34]~input, alu, 1
instance = comp, \adderSub[33].addSub|or1~0 , adderSub[33].addSub|or1~0, alu, 1
instance = comp, \mux64Bit[34].outControl|muxL1P1|or1~0 , mux64Bit[34].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[35]~input , A[35]~input, alu, 1
instance = comp, \mux64Bit[34].bitAnd~0 , mux64Bit[34].bitAnd~0, alu, 1
instance = comp, \adderSub[34].addSub|or1~0 , adderSub[34].addSub|or1~0, alu, 1
instance = comp, \adderSub[34].addSub|or1~1 , adderSub[34].addSub|or1~1, alu, 1
instance = comp, \adderSub[34].addSub|or1~2 , adderSub[34].addSub|or1~2, alu, 1
instance = comp, \B[35]~input , B[35]~input, alu, 1
instance = comp, \mux64Bit[35].outControl|muxL1P1|or1~0 , mux64Bit[35].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[35].addSub|or1~0 , adderSub[35].addSub|or1~0, alu, 1
instance = comp, \A[36]~input , A[36]~input, alu, 1
instance = comp, \B[36]~input , B[36]~input, alu, 1
instance = comp, \mux64Bit[36].outControl|muxL1P1|or1~0 , mux64Bit[36].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[36].addSub|or1~0 , adderSub[36].addSub|or1~0, alu, 1
instance = comp, \B[37]~input , B[37]~input, alu, 1
instance = comp, \A[37]~input , A[37]~input, alu, 1
instance = comp, \mux64Bit[37].outControl|muxL1P1|or1~0 , mux64Bit[37].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[38]~input , A[38]~input, alu, 1
instance = comp, \B[38]~input , B[38]~input, alu, 1
instance = comp, \adderSub[37].addSub|or1~0 , adderSub[37].addSub|or1~0, alu, 1
instance = comp, \mux64Bit[38].outControl|muxL1P1|or1~0 , mux64Bit[38].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[38].addSub|or1~0 , adderSub[38].addSub|or1~0, alu, 1
instance = comp, \A[39]~input , A[39]~input, alu, 1
instance = comp, \B[39]~input , B[39]~input, alu, 1
instance = comp, \mux64Bit[39].outControl|muxL1P1|or1~0 , mux64Bit[39].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[40]~input , A[40]~input, alu, 1
instance = comp, \mux64Bit[39].bitAnd~0 , mux64Bit[39].bitAnd~0, alu, 1
instance = comp, \adderSub[39].addSub|or1~0 , adderSub[39].addSub|or1~0, alu, 1
instance = comp, \adderSub[39].addSub|or1~1 , adderSub[39].addSub|or1~1, alu, 1
instance = comp, \adderSub[39].addSub|or1~2 , adderSub[39].addSub|or1~2, alu, 1
instance = comp, \B[40]~input , B[40]~input, alu, 1
instance = comp, \mux64Bit[40].outControl|muxL1P1|or1~0 , mux64Bit[40].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[41]~input , B[41]~input, alu, 1
instance = comp, \adderSub[40].addSub|or1~0 , adderSub[40].addSub|or1~0, alu, 1
instance = comp, \A[41]~input , A[41]~input, alu, 1
instance = comp, \mux64Bit[41].outControl|muxL1P1|or1~0 , mux64Bit[41].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[41].addSub|or1~0 , adderSub[41].addSub|or1~0, alu, 1
instance = comp, \B[42]~input , B[42]~input, alu, 1
instance = comp, \A[42]~input , A[42]~input, alu, 1
instance = comp, \mux64Bit[42].outControl|muxL1P1|or1~0 , mux64Bit[42].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[42].addSub|or1~0 , adderSub[42].addSub|or1~0, alu, 1
instance = comp, \B[43]~input , B[43]~input, alu, 1
instance = comp, \A[43]~input , A[43]~input, alu, 1
instance = comp, \mux64Bit[43].outControl|muxL1P1|or1~0 , mux64Bit[43].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[43].addSub|or1~0 , adderSub[43].addSub|or1~0, alu, 1
instance = comp, \B[44]~input , B[44]~input, alu, 1
instance = comp, \A[44]~input , A[44]~input, alu, 1
instance = comp, \mux64Bit[44].outControl|muxL1P1|or1~0 , mux64Bit[44].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[44].addSub|or1~0 , adderSub[44].addSub|or1~0, alu, 1
instance = comp, \adderSub[44].addSub|or1~1 , adderSub[44].addSub|or1~1, alu, 1
instance = comp, \mux64Bit[44].bitAnd~0 , mux64Bit[44].bitAnd~0, alu, 1
instance = comp, \adderSub[44].addSub|or1~2 , adderSub[44].addSub|or1~2, alu, 1
instance = comp, \A[45]~input , A[45]~input, alu, 1
instance = comp, \B[45]~input , B[45]~input, alu, 1
instance = comp, \mux64Bit[45].outControl|muxL1P1|or1~0 , mux64Bit[45].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[45].addSub|or1~0 , adderSub[45].addSub|or1~0, alu, 1
instance = comp, \B[46]~input , B[46]~input, alu, 1
instance = comp, \A[46]~input , A[46]~input, alu, 1
instance = comp, \mux64Bit[46].outControl|muxL1P1|or1~0 , mux64Bit[46].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[46].addSub|or1~0 , adderSub[46].addSub|or1~0, alu, 1
instance = comp, \B[47]~input , B[47]~input, alu, 1
instance = comp, \A[47]~input , A[47]~input, alu, 1
instance = comp, \mux64Bit[47].outControl|muxL1P1|or1~0 , mux64Bit[47].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \mux64Bit[1].outControl|muxL1P1|or1~1 , mux64Bit[1].outControl|muxL1P1|or1~1, alu, 1
instance = comp, \A[48]~input , A[48]~input, alu, 1
instance = comp, \B[48]~input , B[48]~input, alu, 1
instance = comp, \mux64Bit[48].outControl|muxL1P1|or1~0 , mux64Bit[48].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \mux64Bit[48].bitXor~0 , mux64Bit[48].bitXor~0, alu, 1
instance = comp, \mux64Bit[48].outControl|muxL1P1|or1~1 , mux64Bit[48].outControl|muxL1P1|or1~1, alu, 1
instance = comp, \B[49]~input , B[49]~input, alu, 1
instance = comp, \adderSub[48].addSub|or1~0 , adderSub[48].addSub|or1~0, alu, 1
instance = comp, \A[49]~input , A[49]~input, alu, 1
instance = comp, \mux64Bit[49].outControl|muxL1P1|or1~0 , mux64Bit[49].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[50]~input , A[50]~input, alu, 1
instance = comp, \B[50]~input , B[50]~input, alu, 1
instance = comp, \mux64Bit[49].bitAnd~0 , mux64Bit[49].bitAnd~0, alu, 1
instance = comp, \mux64Bit[50].outControl|muxL1P1|or1~0 , mux64Bit[50].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[49].addSub|or1~0 , adderSub[49].addSub|or1~0, alu, 1
instance = comp, \adderSub[49].addSub|or1~1 , adderSub[49].addSub|or1~1, alu, 1
instance = comp, \mux64Bit[50].outControl|muxL1P1|or1~1 , mux64Bit[50].outControl|muxL1P1|or1~1, alu, 1
instance = comp, \B[51]~input , B[51]~input, alu, 1
instance = comp, \A[51]~input , A[51]~input, alu, 1
instance = comp, \adderSub[50].addSub|or1~0 , adderSub[50].addSub|or1~0, alu, 1
instance = comp, \mux64Bit[51].outControl|muxL1P1|or1~0 , mux64Bit[51].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[51].addSub|or1~0 , adderSub[51].addSub|or1~0, alu, 1
instance = comp, \B[52]~input , B[52]~input, alu, 1
instance = comp, \A[52]~input , A[52]~input, alu, 1
instance = comp, \mux64Bit[52].outControl|muxL1P1|or1~0 , mux64Bit[52].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[53]~input , A[53]~input, alu, 1
instance = comp, \B[53]~input , B[53]~input, alu, 1
instance = comp, \mux64Bit[53].bitXor~0 , mux64Bit[53].bitXor~0, alu, 1
instance = comp, \mux64Bit[53].outControl|muxL1P1|or1~0 , mux64Bit[53].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \mux64Bit[53].outControl|muxL1P1|or1~1 , mux64Bit[53].outControl|muxL1P1|or1~1, alu, 1
instance = comp, \adderSub[53].addSub|or1~0 , adderSub[53].addSub|or1~0, alu, 1
instance = comp, \B[54]~input , B[54]~input, alu, 1
instance = comp, \A[54]~input , A[54]~input, alu, 1
instance = comp, \mux64Bit[54].outControl|muxL1P1|or1~0 , mux64Bit[54].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \adderSub[54].addSub|or1~0 , adderSub[54].addSub|or1~0, alu, 1
instance = comp, \adderSub[54].addSub|or1~1 , adderSub[54].addSub|or1~1, alu, 1
instance = comp, \B[55]~input , B[55]~input, alu, 1
instance = comp, \A[55]~input , A[55]~input, alu, 1
instance = comp, \mux64Bit[54].bitAnd~0 , mux64Bit[54].bitAnd~0, alu, 1
instance = comp, \mux64Bit[55].outControl|muxL1P1|or1~0 , mux64Bit[55].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \mux64Bit[55].outControl|muxL1P1|or1~1 , mux64Bit[55].outControl|muxL1P1|or1~1, alu, 1
instance = comp, \A[56]~input , A[56]~input, alu, 1
instance = comp, \B[56]~input , B[56]~input, alu, 1
instance = comp, \adderSub[55].addSub|or1~0 , adderSub[55].addSub|or1~0, alu, 1
instance = comp, \mux64Bit[56].outControl|muxL1P1|or1~0 , mux64Bit[56].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[57]~input , A[57]~input, alu, 1
instance = comp, \adderSub[56].addSub|or1~0 , adderSub[56].addSub|or1~0, alu, 1
instance = comp, \B[57]~input , B[57]~input, alu, 1
instance = comp, \mux64Bit[57].outControl|muxL1P1|or1~0 , mux64Bit[57].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[58]~input , B[58]~input, alu, 1
instance = comp, \A[58]~input , A[58]~input, alu, 1
instance = comp, \mux64Bit[58].bitXor~0 , mux64Bit[58].bitXor~0, alu, 1
instance = comp, \mux64Bit[58].outControl|muxL1P1|or1~0 , mux64Bit[58].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \mux64Bit[58].outControl|muxL1P1|or1~1 , mux64Bit[58].outControl|muxL1P1|or1~1, alu, 1
instance = comp, \adderSub[58].addSub|or1~0 , adderSub[58].addSub|or1~0, alu, 1
instance = comp, \B[59]~input , B[59]~input, alu, 1
instance = comp, \A[59]~input , A[59]~input, alu, 1
instance = comp, \mux64Bit[59].outControl|muxL1P1|or1~0 , mux64Bit[59].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \A[60]~input , A[60]~input, alu, 1
instance = comp, \B[60]~input , B[60]~input, alu, 1
instance = comp, \mux64Bit[60].outControl|muxL1P1|or1~0 , mux64Bit[60].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \mux64Bit[59].bitAnd~0 , mux64Bit[59].bitAnd~0, alu, 1
instance = comp, \adderSub[59].addSub|or1~0 , adderSub[59].addSub|or1~0, alu, 1
instance = comp, \adderSub[59].addSub|or1~1 , adderSub[59].addSub|or1~1, alu, 1
instance = comp, \mux64Bit[60].outControl|muxL1P1|or1~1 , mux64Bit[60].outControl|muxL1P1|or1~1, alu, 1
instance = comp, \adderSub[60].addSub|or1~0 , adderSub[60].addSub|or1~0, alu, 1
instance = comp, \B[61]~input , B[61]~input, alu, 1
instance = comp, \A[61]~input , A[61]~input, alu, 1
instance = comp, \mux64Bit[61].outControl|muxL1P1|or1~0 , mux64Bit[61].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[62]~input , B[62]~input, alu, 1
instance = comp, \A[62]~input , A[62]~input, alu, 1
instance = comp, \adderSub[61].addSub|or1~0 , adderSub[61].addSub|or1~0, alu, 1
instance = comp, \mux64Bit[62].outControl|muxL1P1|or1~0 , mux64Bit[62].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \B[63]~input , B[63]~input, alu, 1
instance = comp, \A[63]~input , A[63]~input, alu, 1
instance = comp, \mux64Bit[63].outControl|muxL1P1|or1~0 , mux64Bit[63].outControl|muxL1P1|or1~0, alu, 1
instance = comp, \mux64Bit[63].bitXor~0 , mux64Bit[63].bitXor~0, alu, 1
instance = comp, \mux64Bit[63].outControl|muxL1P1|or1~1 , mux64Bit[63].outControl|muxL1P1|or1~1, alu, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, alu, 1
